name: Debian otel deb package generator

on: push

permissions:
  contents: write

# Required for creating a release
env:
  GH_TOKEN: ${{ github.token }}

jobs:
  build-debs:
    timeout-minutes: 25
    strategy:
      matrix:
        build:
          - arch: amd64
            runs-on: moya-xlarge-x86
          - arch: arm64
            runs-on: moya-xlarge-arm
    runs-on: ${{ matrix.build.runs-on }}
    steps:
      - uses: actions/checkout@v4

      - name: Get Package version
        id: deb-version
        run: |
          deb_ver=$(dpkg-parsechangelog --show-field Version)
          echo "tag_name=$deb_ver" >> $GITHUB_OUTPUT
          if [ "${{ runner.arch }}" == "X64" ];then
            myarch="amd64"
          elif [ "${{ runner.arch }}" == "ARM64" ];then
            myarch="arm64"
          else
            myarch=""
          fi
          echo "rel_name=${deb_ver}-${myarch}" >> $GITHUB_OUTPUT

          # Create a tag with package version and arch
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git tag -f -a ${deb_ver}-${myarch} -m "Release ${VERSION}."
          git push origin ${deb_ver}-${myarch} -f


      - uses: jtdor/build-deb-action@v1
        id: builder
        name: build-deb
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          buildpackage-opts: -us -uc -b -rfakeroot
          extra-build-deps: ca-certificates

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ github.workspace }}/debian/artifacts/*"
          name: ${{steps.deb-version.outputs.rel_name}}
          tag: ${{steps.deb-version.outputs.rel_name}}
          omitNameDuringUpdate: "true"
          omitPrereleaseDuringUpdate: "true"
          allowUpdates: "true"
